combined
Period1_file <- read_csv(paste0(Data_dir,"instruments_combined/",
combined[1]))
Period2_file <- read_csv(paste0(Data_dir,,"instruments_combined/",
combined[2]))
Period1_file <- read_csv(paste0(Data_dir,"instruments_combined/",
combined[1]))
Period2_file <- read_csv(paste0(Data_dir,"instruments_combined/",
combined[2]))
P1_range <- range(Period1_file$`Date and Time`, na.rm =T)
P2_range <- range(Period2_file$`Date and Time`, na.rm =T)
P1_range
P2_range
if (!file.exists(paste0(Data_dir,"/periods_merged"))) {
dir.create(paste0(Data_dir,"/periods_merged"))
}
Period1 <- str_split(str_split(combined[1], "combined")[[1]][2],
".csv")[[1]][1]
Period2 <- str_split(str_split(combined[2], "combined")[[1]][2],
".csv")[[1]][1]
write_csv(combined_period, paste0(Data_dir,"/periods_merged/",
Period1,"_",Period2,".csv"))
library(tidyverse)
library(plotly)
#library(readxl)
#library(htmlwidgets)
source("Functions_Rain.R")
print(lsf.str())
Data_dir = "..//All_Raw_Data/Test_T4T52023_folder/T052323/Rain"
files <- read_list_files(Data_dir)
files
name <- files$names[1]
file_path <- files$paths[[which(files$names==name)]]
test_data <- read_data_file(name, file_path)
test_data
#file_path_in <- "../All_Raw_data/T042223/Rain"
test_files <- process_rain_data_auto(file_path = Data_dir, output_path_add = "processed")
data_processed <- create_data_list(path_to_processed = paste0(Data_dir,"/processed"))
check_plot(data_processed)
check_plot(data_processed, plot = 2)
library(tidyverse)
library(plotly)
#library(htmlwidgets)
Data_dir = "..//All_Raw_Data/Test_T4T52023_folder/T052323/Weather"
source("Functions_Weather.R")
c_names <- c("id", "julian", "time", "battery voltage",
"Temperature Â°C",
"RelH", "windspeed", "wind direction", "net radiation",
"solar radiation",   "rainfall")
# columns to drop when you have created the date and time variable
cols_drop <- c("id", "julian", "time", "battery voltage")
test_hobo <- read_hobo_weather(filename = "em042223.dat",
dir = "../All_Raw_Data/T042223/Weather",
cols_to_drop = cols_drop, plotit=T)
test_hobo$data
ggplotly(test_hobo$plot)
library(tidyverse)
library(plotly)
library(readtext)
source("Functions_well.R")
library(tidyverse)
library(plotly)
# library(readxl)
# library(htmlwidgets)
source("Functions_Flumes.R")
source("Functions_Flumes.R")
#Data_dir ="..//All_Raw_Data/Test_T4T52023_folder/T042223/flumes"
Data_dir ="..//All_Raw_Data/Test_T4T52023_folder/T042223/flumes"
File_info <- read_list_flume(Data_dir)
str(File_info)
File_info$names
test_info <- read_flume_files(file_path = Data_dir)
test_info
test_list <- process_file_list(file_info = File_info,
out_path = paste0(Data_dir,"/processed"))
length(test_list) #number of files
ggplotly(test_list[[2]])
ggplotly(test_list[[10]])
library(tidyverse)
library(plotly)
source("Functions_merge.R")
Data_dir = "../All_Raw_Data/Test_T4T52023_folder/T052323"
rain_files <- list.files(paste0(Data_dir,"/rain/processed"))
flume_files <- list.files(paste0(Data_dir,"/flumes/processed"))
rain_files
rain_file = "OTIP_R1052523.csv"
ISCO_nivel = "v1052523_processed.csv"
rain <- read_otip_file(name = rain_file,
path_to_file = paste0(Data_dir,"/rain/processed"))
if(file.exists(paste0(Data_dir,"/Flumes/processed/",ISCO_nivel))) {
ISCOnivel <- read_flume_output2(name = ISCO_nivel,
path_to_file = paste0(Data_dir,
"/Flumes/processed"))
} else {
message("ISCO nivel file does not exist: create a dummy df")
#create a dummy file
ISCOnivel <- tribble(
~`Date and Time`, ~`Water Level, meters`,
rain$`Date and Time`[nrow(rain)], NA
)
}
test_summary_rain <- sum_fun(rain)
test_summary_flume <- sum_fun(ISCOnivel)
test_summary_rain
merged_df <- merge_data(test_summary_rain,test_summary_flume)
head(merged_df)
day_summary_rain <- sum_fun(rain, timestep = "day")
day_summary_flume <- sum_fun(ISCOnivel, timestep = "day")
month_summary_rain <- sum_fun(rain, timestep = "month")
month_summary_flume <- sum_fun(ISCOnivel, timestep = "month")
day_merged_df <- merge_data(day_summary_rain,day_summary_flume)
month_merged_df <- merge_data(month_summary_rain,
month_summary_flume)
p <- merged_df %>%
#pivot_longer(2:3,values_to = "value", names_to="variable") %>%
ggplot(aes(`Date and Time`, Event*0.2)) +
geom_point(colour = "blue") +
#geom_bar(stat = "identity", fill = "blue") +
geom_line(aes(`Date and Time`, `Water Level, meters`), colour = "red") + theme_bw() +
scale_y_continuous(sec.axis =sec_axis( trans=~., name="Water Level in Meters"))
p
ggplotly(p)
p1 <- day_merged_df %>%
#pivot_longer(2:3,values_to = "value", names_to="variable") %>%
ggplot(aes(`Date and Time`, Event)) + geom_bar(stat = "identity", fill = "blue") +
geom_line(aes(`Date and Time`, `Water Level, meters`*50), colour = "red") + theme_bw() +
scale_y_continuous(
# Features of the first axis
name = "Event",
# Add a second axis and specify its features
sec.axis = sec_axis( trans=~./50, name="Water Level in Meters")
)
p1
ggplotly(p1)
p2 <- month_merged_df %>%
#pivot_longer(2:3,values_to = "value", names_to="variable") %>%
ggplot(aes(`Date and Time`, Event*0.2)) + geom_bar(stat = "identity", fill = "blue") +
geom_line(aes(`Date and Time`, `Water Level, meters`*1000), colour = "red") + theme_bw() +
scale_y_continuous(
# Features of the first axis
name = "Event",
# Add a second axis and specify its features
sec.axis = sec_axis( trans=~./1000, name="Water Level in Meters")
)
#p1
ggplotly(p2)
file_Stevens = "V1052523csv_processed.csv"
flume <- read_flume_output2(name = file_Stevens,
path_to_file = paste0(Data_dir,"/Flumes/processed"))
test_summary_stevens <- sum_fun(flume)
test_summary_stevens
merged_three_df <- merge_data(merged_df,test_summary_stevens, by = "Date and Time")
merged_three_df
colnames(merged_three_df)[3:4] <- c("ISCO Water Level, meters", "Stevens, Water Level, meters")
p3 <- plot_merged(merged_three_df)
p3
ggplotly(p3)
flume_hobo20 <- read_flume_output2(name = "s1052523_processed.csv",
path_to_file = paste0(Data_dir,"/Flumes/processed"))
test_summary_hobo20 <- sum_fun(flume_hobo20)
test_summary_hobo20
merged_four_df <- merge_data(merged_three_df,test_summary_hobo20, by = "Date and Time")
merged_four_df
merged_four_df <- merged_four_df %>%
rename("HOBO20 Water Level, meters" = "Water Level, meters")
p4 <- plot_merged(merged_four_df)
p4
ggplotly(p4)
Data_dir = "../All_Raw_Data/Test_T4T52023_folder/"
combined <- list.files(paste0(Data_dir,"instruments_combined/"))
combined
Period1_file <- read_csv(paste0(Data_dir,"instruments_combined/",
combined[1]))
Period2_file <- read_csv(paste0(Data_dir,"instruments_combined/",
combined[2]))
P1_range <- range(Period1_file$`Date and Time`, na.rm =T)
P2_range <- range(Period2_file$`Date and Time`, na.rm =T)
P1_range
P2_range
source("Functions_merge.R")
combined_period <- merge_periods(Period1_file, Period2_file)
p <- plot_merged(combined_period)
p
ggplotly(p)
library(tidyverse)
library(plotly)
#library(readtext)
source("Functions_well.R")
#Data_dir ="..//All_Raw_Data/Test_T4T52023_folder/T042223"
Data_dir ="..//All_Raw_Data/Test_T4T52023_folder/T042223"
#getwd()
well_files <- list.files(paste0(Data_dir,"/wells"), pattern = ".csv")
test_well <- read_hobo_well(paste0(Data_dir,"/wells/",well_files[1]), plotit = T)
View(file_read)
file_read %>%
select(`Date and Time`,`Abs Pressure kPa`, `Temp, ?C`,
`Water Level, meters` ) %>%
# remove missing values
na.omit()
View(file_read)
file_out <- file_read %>%
select(`Date and Time`,`Abs Pressure kPa`, `Temp, ?C`,
`Water Level, meters` ) %>%
# remove missing values
na.omit()
View(file_read)
file_out <- file_read %>%
select(`Date and Time`,`Abs Pressure kPa`, `Temp, ?C`,
`Water Level, meters` )
View(file_out)
ggplotly(test_well$plot)
source("Functions_well.R")
#getwd()
well_files <- list.files(paste0(Data_dir,"/wells"), pattern = ".csv")
test_well <- read_hobo_well(paste0(Data_dir,"/wells/",well_files[1]), plotit = T)
ggplotly(test_well$plot)
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_well.R")
test_well <- read_hobo_well(paste0(Data_dir,"/wells/",well_files[1]), plotit = T)
ggplotly(test_well$plot)
test_well$file
test_baro <- read_hobo_baro(paste0(Data_dir,"/wells/",bar_files[1]))
test_baro <- read_hobo_baro(paste0(Data_dir,"/wells/",well_files[1]))
ggplotly(test_baro$plot)
# baro dataframe first in the function
test_merge <- Merge_baro_well(test_baro$file, test_well$file)
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_well.R")
# baro dataframe first in the function
test_merge <- Merge_baro_well(test_baro$file, test_well$file)
ggplotly(test_merge$plot)
p2 <- test_merge$data %>%
pivot_longer(c(`Abs Pressure kPa`, `Barom Pressure kPa`),
values_to = "pressure",
names_to = "type") %>%
ggplot(aes(`Date and Time`,pressure, colour = type)) + geom_line() +
theme_bw()
ggplotly(p2)
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_well.R")
library(readtext)
text_in_file <- readtext(paste0(Data_dir,"/Wells/",
"cuencas042223.docx"),
encoding = "utf8")$text
dates <- find_dates(text_in_file, "Data")
dates
paste0(Data_dir,"/Wells/",
"cuencas042223.docx")
readtext(paste0(Data_dir,"/Wells/",
"cuencas042223.docx"),
encoding = "utf8")$text
?readtext
paste0(Data_dir,"/Wells/",
"cuencas042223.docx")
readtext(paste0(Data_dir,"/Wells/",
"cuencas042223.docx"))
#Data_dir ="..//All_Raw_Data/Test_T4T52023_folder/T042223"
Data_dir ="../All_Raw_Data/Test_T4T52023_folder/T042223"
readtext(paste0(Data_dir,"/Wells/",
"cuencas042223.docx"))
paste0(Data_dir,"/Wells/",
"cuencas042223.docx")
list.files(paste0(Data_dir,"/Wells/",
"cuencas042223.docx"))
list.files(paste0(Data_dir,"/Wells/"))
list.files(paste0(Data_dir,"/Wells"))
list.files(paste0(Data_dir,"Wells"))
list.files(paste0(Data_dir,"/Wells"))
getwd()
setwd("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts")
readtext(paste0(Data_dir,"/Wells/",
"cuencas042223.docx"))
dates <- find_dates(text_in_file, "Data")
dates
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_well.R")
dates <- find_dates(text_in_file, "Data")
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_well.R")
dates <- find_dates(text_in_file, "Data")
dates
line_dates
dates <- as.Date(vector(mode = "character"))
dates <- find_dates(text_in_file, "Data")
dates
line_dates[[1]][i,2]+1
i <- 1
line_dates[[1]][i,2]+1
str_sub(text_in,line_dates[[1]][i,2]+1,
line_dates[[1]][i,2]+12)
dmy(str_sub(text_in,line_dates[[1]][i,2]+1,
line_dates[[1]][i,2]+12))
dmy(str_sub(text_in,line_dates[[1]][i,2]+2,
line_dates[[1]][i,2]+12))
dmy(str_sub(text_in,line_dates[[1]][i,2]+2,
line_dates[[1]][i,2]+7))
str_sub(text_in,line_dates[[1]][i,2]+2,
line_dates[[1]][i,2]+7)
str_sub(text_in,line_dates[[1]][i,2]+2,
line_dates[[1]][i,2]+9)
str_sub(text_in,line_dates[[1]][i,2]+2,
line_dates[[1]][i,2]+10)
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_well.R")
dates <- find_dates(text_in_file, "Data")
dates
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_well.R")
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_well.R")
dates <- find_dates(text_in_file, "Data")
dates
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_well.R")
dates <- find_dates(text_in_file, "Data")
dates
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_well.R")
dates <- find_dates(text_in_file, "Data")
dates
text_in_file <- readtext(paste0(Data_dir,"/Wells/",
"cuencas042223.docx"),
encoding = "utf8")$text
dates <- find_dates(text_in_file, "Data")
dates
text_in_file <- readtext(paste0(Data_dir,"/Wells/",
"cuencas042223.docx"),
encoding = "utf8")$text
well_data_section <- doc_data_find(text_in = text_in_file,
feature_1 = "Wells",
feature_2 = "Rain\n")
well_data_section
well_data <- list()
# put the well tables in the list
for (i in 1:nrow(well_data_section)) {
well_data[[i]] <-
extract_well_sec(well_data_start = well_data_section[i,],
text_in = text_in_file,
text_string = "N.")
well_data[[i]] <- well_data[[i]] %>%
mutate(Date = dates$dates[i])
}
well_data
well_test <- read_manual_well("cuencas042223.docx",
input_dir = paste0(Data_dir,"/Wells/"))
well_test
source("Functions_Weather.R")
library(tidyverse)
library(plotly)
#library(htmlwidgets)
Data_dir = "..//All_Raw_Data/Test_T4T52023_folder/T042223/Weather"
c_names <- c("id", "julian", "time", "battery voltage",
"Temperature Â°C",
"RelH", "windspeed", "wind direction", "net radiation",
"solar radiation",   "rainfall")
# columns to drop when you have created the date and time variable
cols_drop <- c("id", "julian", "time", "battery voltage")
c_names <- c("id", "julian", "time", "battery voltage",
"Temperature Â°C",
"RelH", "windspeed", "wind direction", "net radiation",
"solar radiation",   "rainfall")
# columns to drop when you have created the date and time variable
cols_drop <- c("id", "julian", "time", "battery voltage")
c_names <- c("id", "julian", "time", "battery voltage",
"Temperature Â°C",
"RelH", "windspeed", "wind direction", "net radiation",
"solar radiation",   "rainfall")
# columns to drop when you have created the date and time variable
cols_drop <- c("id", "julian", "time", "battery voltage")
test_hobo <- read_hobo_weather(filename = "em042223.dat",
dir = Data_dir,
cols_to_drop = cols_drop, plotit=T)
source("Functions_Weather.R")
test_hobo <- read_hobo_weather(filename = "em042223.dat",
dir = Data_dir,
cols_to_drop = cols_drop, plotit=T)
test_hobo$data
ggplotly(test_hobo$plot)
library(tidyverse)
library(plotly)
#library(readxl)
#library(htmlwidgets)
source("Functions_Rain.R")
print(lsf.str())
rm(list = ls())
# This cleans out the environment, comment out if you don't want this
library(tidyverse)
library(plotly)
#library(readxl)
#library(htmlwidgets)
source("Functions_Rain.R")
print(lsf.str())
Data_dir = "..//All_Raw_Data/Test_T4T52023_folder/T042223/Rain"
files <- read_list_files(Data_dir)
files
name <- files$names[1]
file_path <- files$paths[[which(files$names==name)]]
test_data <- read_data_file(name, file_path)
test_data
#file_path_in <- "../All_Raw_data/T042223/Rain"
test_files <- process_rain_data_auto(file_path = Data_dir, output_path_add = "processed")
data_processed <- create_data_list(path_to_processed = paste0(Data_dir,"/processed"))
check_plot(data_processed)
check_plot(data_processed, plot = 2)
View(data_processed)
View(data_processed)
?pivot_wider
df <- bind_rows(data_processed)
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_Rain.R")
data_processed <- create_data_list(path_to_processed = paste0(Data_dir,"/processed"))
df <- bind_rows(data_processed)
df %>%
group_by(Date_hour = lubridate::floor_date(Date, "1 hour"),filename) %>%
summarise(Hourly_Rainfall = sum(tipRainmm)) %>%
pivot_wider(names_from =  filename,
values_from = Hourly_Rainfall)
?ggpairs
require(GGally)
?ggpairs
quickplot_rain3 <- ggpairs(plot_df[,2:4],
upper = list(continuous = "na"),
lower = list(continuous = "smooth"))
plot_df <- df %>%
group_by(Date_hour = lubridate::floor_date(Date, "1 hour"),filename) %>%
summarise(Hourly_Rainfall = sum(tipRainmm)) %>%
pivot_wider(names_from =  filename,
values_from = Hourly_Rainfall)
quickplot_rain3 <- ggpairs(plot_df[,2:4],
upper = list(continuous = "na"),
lower = list(continuous = "smooth"))
ggtitle(ggtitle_text) +
theme_minimal() +
theme_light() +  # Use a minimal theme
theme(legend.position = "top")
ggtitle_text <- "Scatter pairs plot between stations"
# group by hour
plot_df <- df %>%
group_by(Date_hour = lubridate::floor_date(Date, "1 hour"),filename) %>%
summarise(Hourly_Rainfall = sum(tipRainmm)) %>%
pivot_wider(names_from =  filename,
values_from = Hourly_Rainfall)
quickplot_rain3 <- ggpairs(plot_df[,2:4],
upper = list(continuous = "na"),
lower = list(continuous = "smooth"))
ggtitle(ggtitle_text) +
theme_minimal() +
theme_light() +  # Use a minimal theme
theme(legend.position = "top")
quickplot_rain3
head(plot_df)
?across
plot_df <- df %>%
group_by(Date_hour = lubridate::floor_date(Date, "1 hour"),filename) %>%
summarise(Hourly_Rainfall = sum(tipRainmm)) %>%
pivot_wider(names_from =  filename,
values_from = Hourly_Rainfall) %>%
mutate(across(contains("OTIP"),nzero = ~ ifelse(is.na(.x),0,.x)))
plot_df <- df %>%
group_by(Date_hour = lubridate::floor_date(Date, "1 hour"),filename) %>%
summarise(Hourly_Rainfall = sum(tipRainmm)) %>%
pivot_wider(names_from =  filename,
values_from = Hourly_Rainfall) %>%
mutate(across(contains("OTIP"),~ ifelse(is.na(.x),0,.x)))
View(plot_df)
quickplot_rain3 <- ggpairs(plot_df[,2:4],
upper = list(continuous = "na"),
lower = list(continuous = "smooth"))
ggtitle(ggtitle_text) +
theme_minimal() +
theme_light() +  # Use a minimal theme
theme(legend.position = "top")
quickplot_rain3
quickplot_rain3 <- ggpairs(plot_df[,2:4],
title = ggtitle_text,
upper = list(continuous = "na"),
lower = list(continuous = "smooth"))
theme_minimal() +
theme_light() +  # Use a minimal theme
theme(legend.position = "top")
quickplot_rain3 <- ggpairs(plot_df[,2:4],
title = ggtitle_text,
upper = list(continuous = "na"),
lower = list(continuous = "smooth")) +
theme_minimal() +
theme_light() +  # Use a minimal theme
theme(legend.position = "top")
quickplot_rain3
ggpairs(plot_df)
ggpairs(plot_df[,2:4])
quickplot_rain3 <- ggpairs(plot_df[,2:4],
title = ggtitle_text,
upper = list(continuous = "cor"),
lower = list(continuous = "smooth")) +
theme_minimal() +
theme_light() +  # Use a minimal theme
theme(legend.position = "top")
quickplot_rain3
ggplotly(quickplot_rain3)
quickplot_rain3 <- ggpairs(plot_df[,2:4],
aes(color = filename)
title = ggtitle_text,
quickplot_rain3 <- ggpairs(plot_df[,2:4],
aes(color = filename),
title = ggtitle_text,
upper = list(continuous = "cor"),
lower = list(continuous = "smooth")) +
theme_minimal() +
theme_light() +  # Use a minimal theme
theme(legend.position = "top")
ggplotly(quickplot_rain3)
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_Rain.R")
?case_when
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_Rain.R")
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_Rain.R")
check_plot(data_processed, plot = 2)
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_Rain.R")
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_Rain.R")
check_plot(data_processed, plot = 2)
source("C:/Users/rver4657/OneDrive - The University of Sydney (Staff)/Uruguay/LaCorona/lacorona_ncsu/ncsu/Scripts/Functions_Rain.R")
check_plot(data_processed, plot = 2)
checkplot(data_processed, plot = 3)
check_plot(data_processed, plot = 3)
